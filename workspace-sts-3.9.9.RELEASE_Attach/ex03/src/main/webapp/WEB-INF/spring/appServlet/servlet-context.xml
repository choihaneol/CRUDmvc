<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- mapping으로 들어온 클라이언트 요청에 대해 location으로 매핑 -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- InternalResourceViewResolver:Controller가 반환한 결과를 어떤 View를 통해서 처리할지 해석(스프Mvc의 화면설정 "/WEB-INF/views/" 폴더이용.)  -->
	<!-- 일일이 전체경로와 .jsp를 붙이지 않아도 되도록 도와준다. -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" /> <!-- 경로 -->
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- package scan ->@Component -->
	<context:component-scan base-package="org.zerock.controller" />
	
	
	
</beans:beans>




<!--  

- DispatcherServlet : 클라이언트의 요청을 전달받는다. 
  Controller에게 클라이언트의 요청을 전달하고, Controller가 리턴한 결과값을 View에 전달하여 
  알맞은 응답을 생성하도록 한다.
- HandlerMapping : 클라이언트의 요청 URL을 어떤 Controller가 처리할지를 결정한다.
- Controller : 클라이언트의 요청을 처리한 뒤, 그 결과를 DispatcherServlet에 알려준다. 
- ViewResolver	: Commander의 처리 결과를 보여줄 View를 결정한다.
- View : Commander의 처리 결과를 보여줄 응답을 생성한다.

-->